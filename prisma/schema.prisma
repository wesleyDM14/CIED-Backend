// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum TicketType {
  NORMAL
  PREFERENCIAL
}

enum TicketStatus {
  WAITING
  CALLED
  FINISHED
  CANCELED
}

enum UserRole {
  ADMIN
  OPERATOR
}

enum MetodoPagamento {
  DINHEIRO
  CARTAO
  CONVENIO
  SUS
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  role          UserRole  @default(OPERATOR)
  failedAttemps Int       @default(0)
  lockUntil     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Client {
  id           String         @id @default(uuid())
  name         String
  email        String?        @unique
  phone        String?
  address      String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  procedimento Procedimento[]
}

model Ticket {
  id             String       @id @default(uuid())
  number         String
  type           TicketType
  status         TicketStatus @default(WAITING)
  serviceCounter String?

  createdAt DateTime  @default(now())
  calledAt  DateTime?
  updatedAt DateTime  @updatedAt
}

model Procedimento {
  id              String           @id @default(uuid())
  nome            String
  description     String?
  preco           Float?
  metodoPagamento MetodoPagamento?

  clientId String?
  cliente  Client? @relation(fields: [clientId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
